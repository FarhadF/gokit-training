// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movies.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetMoviesResponse struct {
	Movies               []*Movie `protobuf:"bytes,1,rep,name=movies" json:"movies,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoviesResponse) Reset()         { *m = GetMoviesResponse{} }
func (m *GetMoviesResponse) String() string { return proto.CompactTextString(m) }
func (*GetMoviesResponse) ProtoMessage()    {}
func (*GetMoviesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_movies_6bec4ade6cabb9cd, []int{0}
}
func (m *GetMoviesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoviesResponse.Unmarshal(m, b)
}
func (m *GetMoviesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoviesResponse.Marshal(b, m, deterministic)
}
func (dst *GetMoviesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoviesResponse.Merge(dst, src)
}
func (m *GetMoviesResponse) XXX_Size() int {
	return xxx_messageInfo_GetMoviesResponse.Size(m)
}
func (m *GetMoviesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoviesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoviesResponse proto.InternalMessageInfo

func (m *GetMoviesResponse) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

func (m *GetMoviesResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Movie struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Director             string               `protobuf:"bytes,3,opt,name=director" json:"director,omitempty"`
	Year                 string               `protobuf:"bytes,4,opt,name=year" json:"year,omitempty"`
	Userid               string               `protobuf:"bytes,5,opt,name=userid" json:"userid,omitempty"`
	Createdon            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdon" json:"createdon,omitempty"`
	Updatedon            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updatedon" json:"updatedon,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_movies_6bec4ade6cabb9cd, []int{1}
}
func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (dst *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(dst, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Movie) GetDirector() string {
	if m != nil {
		return m.Director
	}
	return ""
}

func (m *Movie) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Movie) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *Movie) GetCreatedon() *timestamp.Timestamp {
	if m != nil {
		return m.Createdon
	}
	return nil
}

func (m *Movie) GetUpdatedon() *timestamp.Timestamp {
	if m != nil {
		return m.Updatedon
	}
	return nil
}

type GetMovieByIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieByIdRequest) Reset()         { *m = GetMovieByIdRequest{} }
func (m *GetMovieByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetMovieByIdRequest) ProtoMessage()    {}
func (*GetMovieByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_movies_6bec4ade6cabb9cd, []int{2}
}
func (m *GetMovieByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieByIdRequest.Unmarshal(m, b)
}
func (m *GetMovieByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieByIdRequest.Marshal(b, m, deterministic)
}
func (dst *GetMovieByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieByIdRequest.Merge(dst, src)
}
func (m *GetMovieByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetMovieByIdRequest.Size(m)
}
func (m *GetMovieByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieByIdRequest proto.InternalMessageInfo

func (m *GetMovieByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetMovieByIdResponse struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie" json:"movie,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieByIdResponse) Reset()         { *m = GetMovieByIdResponse{} }
func (m *GetMovieByIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetMovieByIdResponse) ProtoMessage()    {}
func (*GetMovieByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_movies_6bec4ade6cabb9cd, []int{3}
}
func (m *GetMovieByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieByIdResponse.Unmarshal(m, b)
}
func (m *GetMovieByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieByIdResponse.Marshal(b, m, deterministic)
}
func (dst *GetMovieByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieByIdResponse.Merge(dst, src)
}
func (m *GetMovieByIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetMovieByIdResponse.Size(m)
}
func (m *GetMovieByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieByIdResponse proto.InternalMessageInfo

func (m *GetMovieByIdResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

func (m *GetMovieByIdResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_movies_6bec4ade6cabb9cd, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetMoviesResponse)(nil), "pb.GetMoviesResponse")
	proto.RegisterType((*Movie)(nil), "pb.Movie")
	proto.RegisterType((*GetMovieByIdRequest)(nil), "pb.GetMovieByIdRequest")
	proto.RegisterType((*GetMovieByIdResponse)(nil), "pb.GetMovieByIdResponse")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Movies service

type MoviesClient interface {
	GetMovies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMoviesResponse, error)
	GetMovieById(ctx context.Context, in *GetMovieByIdRequest, opts ...grpc.CallOption) (*GetMovieByIdResponse, error)
}

type moviesClient struct {
	cc *grpc.ClientConn
}

func NewMoviesClient(cc *grpc.ClientConn) MoviesClient {
	return &moviesClient{cc}
}

func (c *moviesClient) GetMovies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMoviesResponse, error) {
	out := new(GetMoviesResponse)
	err := grpc.Invoke(ctx, "/pb.Movies/GetMovies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesClient) GetMovieById(ctx context.Context, in *GetMovieByIdRequest, opts ...grpc.CallOption) (*GetMovieByIdResponse, error) {
	out := new(GetMovieByIdResponse)
	err := grpc.Invoke(ctx, "/pb.Movies/GetMovieById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Movies service

type MoviesServer interface {
	GetMovies(context.Context, *Empty) (*GetMoviesResponse, error)
	GetMovieById(context.Context, *GetMovieByIdRequest) (*GetMovieByIdResponse, error)
}

func RegisterMoviesServer(s *grpc.Server, srv MoviesServer) {
	s.RegisterService(&_Movies_serviceDesc, srv)
}

func _Movies_GetMovies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesServer).GetMovies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Movies/GetMovies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesServer).GetMovies(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Movies_GetMovieById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovieByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesServer).GetMovieById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Movies/GetMovieById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesServer).GetMovieById(ctx, req.(*GetMovieByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Movies_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Movies",
	HandlerType: (*MoviesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovies",
			Handler:    _Movies_GetMovies_Handler,
		},
		{
			MethodName: "GetMovieById",
			Handler:    _Movies_GetMovieById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movies.proto",
}

func init() { proto.RegisterFile("movies.proto", fileDescriptor_movies_6bec4ade6cabb9cd) }

var fileDescriptor_movies_6bec4ade6cabb9cd = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x6d, 0xa1, 0xc5, 0x0e, 0xc4, 0xe8, 0x88, 0xba, 0xe9, 0x05, 0x6c, 0x62, 0xc2, 0xa9,
	0x24, 0x78, 0xf1, 0xac, 0x31, 0xca, 0xc1, 0x4b, 0xe3, 0x0b, 0x50, 0x3a, 0x92, 0x4d, 0x28, 0xbb,
	0x6e, 0xb7, 0x26, 0x5c, 0x7c, 0x5f, 0xdf, 0xc2, 0x30, 0x6d, 0x11, 0xc4, 0xc4, 0xdb, 0xce, 0xcc,
	0xf7, 0x4f, 0xf6, 0xff, 0x07, 0x7a, 0xb9, 0xfa, 0x90, 0x54, 0xc4, 0xda, 0x28, 0xab, 0xd0, 0xd5,
	0x69, 0x38, 0x58, 0x28, 0xb5, 0x58, 0xd2, 0x98, 0x3b, 0x69, 0xf9, 0x36, 0xb6, 0x32, 0xa7, 0xc2,
	0xce, 0x72, 0x5d, 0x41, 0xd1, 0x33, 0x9c, 0x3d, 0x91, 0x7d, 0x61, 0x5d, 0x42, 0x85, 0x56, 0xab,
	0x82, 0xf0, 0x1a, 0xfc, 0x6a, 0x93, 0x70, 0x86, 0xad, 0x51, 0x77, 0x12, 0xc4, 0x3a, 0x8d, 0x99,
	0x49, 0xea, 0x01, 0x9e, 0x42, 0x8b, 0x8c, 0x11, 0xee, 0xd0, 0x19, 0x05, 0xc9, 0xe6, 0x19, 0x7d,
	0x39, 0xe0, 0x31, 0x83, 0x27, 0xe0, 0xca, 0x4c, 0x38, 0x3c, 0x72, 0x65, 0x86, 0x7d, 0xf0, 0xac,
	0xb4, 0x4b, 0xaa, 0xe9, 0xaa, 0xc0, 0x10, 0x8e, 0x33, 0x69, 0x68, 0x6e, 0x95, 0x11, 0x2d, 0x1e,
	0x6c, 0x6b, 0x44, 0x68, 0xaf, 0x69, 0x66, 0x44, 0x9b, 0xfb, 0xfc, 0xc6, 0x4b, 0xf0, 0xcb, 0x82,
	0x8c, 0xcc, 0x84, 0xc7, 0xdd, 0xba, 0xc2, 0x3b, 0x08, 0xe6, 0x86, 0x66, 0x96, 0x32, 0xb5, 0x12,
	0xfe, 0xd0, 0x19, 0x75, 0x27, 0x61, 0x5c, 0xd9, 0x8e, 0x1b, 0xdb, 0xf1, 0x6b, 0x63, 0x3b, 0xf9,
	0x81, 0x37, 0xca, 0x52, 0x67, 0xb5, 0xb2, 0xf3, 0xbf, 0x72, 0x0b, 0x47, 0x37, 0x70, 0xde, 0xa4,
	0x76, 0xbf, 0x9e, 0x66, 0x09, 0xbd, 0x97, 0x54, 0xd8, 0xdf, 0xc6, 0xa3, 0x29, 0xf4, 0xf7, 0xb1,
	0x3a, 0xdf, 0x01, 0x78, 0x1c, 0x23, 0xa3, 0x7b, 0xf1, 0x56, 0xfd, 0x3f, 0xd2, 0xed, 0x80, 0xf7,
	0x98, 0x6b, 0xbb, 0x9e, 0x7c, 0x82, 0x5f, 0x5d, 0x0b, 0xc7, 0x10, 0x6c, 0x4f, 0x87, 0xbc, 0x83,
	0x89, 0xf0, 0x62, 0xf3, 0x3c, 0x38, 0x6a, 0x74, 0x84, 0x0f, 0xd0, 0xdb, 0xfd, 0x0e, 0x5e, 0xed,
	0x82, 0x3b, 0x3e, 0x42, 0x71, 0x38, 0x68, 0x96, 0xa4, 0x3e, 0x27, 0x73, 0xfb, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0x6a, 0xad, 0x9c, 0x12, 0x6c, 0x02, 0x00, 0x00,
}
